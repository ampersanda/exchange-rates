{"version":3,"file":"ajax.core.js","sources":["ajax/core.cljc"],"mappings":"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","names":["var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","ajax.core/HEAD","uri","opts","f__11677__auto__","cljs.core/first","ajax.easy/easy-ajax-request","cljs.core/Keyword","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","seq12080","G__12081","cljs.core/next","self__4518__auto__","ajax.core/ajax-request","ajax.simple/ajax-request","ajax.core/json-response-format","ajax.json/json-response-format","ajax.core/url-request-format","ajax.url/url-request-format","ajax.core/DELETE","seq12095","G__12096","ajax.core/text-request-format","ajax.formats/text-request-format","ajax.core/POST","seq12085","G__12086","ajax.core/abort","this","ajax.core/transit-request-format","ajax.transit/transit-request-format","ajax.core/ring-response-format","ajax.ring/ring-response-format","ajax.core/raw-response-format","ajax.formats/raw-response-format","ajax.protocols/-abort","ajax.core/PUT","seq12090","G__12091","ajax.core/default-interceptors","ajax.simple/default-interceptors","ajax.core/success?","ajax.util/success?","ajax.core/OPTIONS","seq12100","G__12101","ajax.core/PURGE","seq12115","G__12116","ajax.core/TRACE","seq12105","G__12106","ajax.core/json-request-format","ajax.json/json-request-format","ajax.core/to-interceptor","ajax.interceptors/to-interceptor","ajax.core/GET","seq12075","G__12076","ajax.core/detect-response-format","ajax.easy/detect-response-format","ajax.core/transit-response-format","ajax.transit/transit-response-format","ajax.core/PATCH","seq12110","G__12111","ajax.core/default-formats","ajax.easy/default-formats","ajax.core/text-response-format","ajax.formats/text-response-format"],"sourcesContent":["(ns ajax.core\n  \"This is the documented API for cljs-ajax. The only functions not\n   exposed here that are documented are the deprecated features.\"\n  (:require [clojure.string :as str]\n            [ajax.url :as url]\n            [ajax.json :as json]\n            [ajax.transit :as transit]\n            [ajax.ring :as ring]\n            [ajax.formats :as f]\n            [ajax.util :as u]\n            [ajax.interceptors :as i]\n            [ajax.simple :as simple]\n            [ajax.easy :as easy]\n            [ajax.protocols :as pr]\n            #?@ (:clj  [[ajax.macros :as m]\n                        [poppea :as p]\n                        [ajax.apache]]\n                 :cljs [[ajax.xhrio]\n                        [ajax.xml-http-request]]))\n  #? (:cljs\n      (:require-macros [ajax.macros :as m])))\n\n;;; NB As a matter of policy, this file shouldn't reference any\n;;; google closure files. That functionality should be off in\n;;; specific namespaces and exposed here in a platform indepdent\n;;; way\n\n;;; Ideally this would be true of all functionality, but it's\n;;; an ongoing project.\n\n(def to-interceptor i/to-interceptor)\n\n(defn abort [this]\n  \"Call this on the result of `ajax-request` to cancel the request.\"\n  (pr/-abort this))\n\n;;; Standard Formats\n\n(def json-request-format json/json-request-format)\n(def json-response-format json/json-response-format)\n\n(def transit-request-format transit/transit-request-format)\n(def transit-response-format transit/transit-response-format)\n\n(def ring-response-format ring/ring-response-format)\n\n(def url-request-format url/url-request-format)\n\n(def text-request-format f/text-request-format)\n(def text-response-format f/text-response-format)\n; There's no raw-request-format because it's handled by the DirectSubmission code\n(def raw-response-format f/raw-response-format)\n\n(def success? u/success?)\n\n;;; Here's the entire \"simple\" API.\n\n(def default-interceptors simple/default-interceptors)\n\n(def ajax-request simple/ajax-request)\n\n;;; \"Easy\" API beyond this point\n\n(def default-formats easy/default-formats)\n\n;;; NB detect-response-format with no parameters will pull\n;;; in every non-deprecated format in the code and so is\n;;; considered part of the \"easy\" API. However,\n;;; using your own vector specification works with the\n;;; simple API and allows you to control what formats you\n;;; want to support.\n(def detect-response-format easy/detect-response-format)\n\n(m/easy-api GET)\n(m/easy-api HEAD)\n(m/easy-api POST)\n(m/easy-api PUT)\n(m/easy-api DELETE)\n(m/easy-api OPTIONS)\n(m/easy-api TRACE)\n(m/easy-api PATCH)\n(m/easy-api PURGE)\n"]}