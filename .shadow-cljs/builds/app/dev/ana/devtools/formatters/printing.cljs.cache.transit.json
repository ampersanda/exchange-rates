["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.helpers');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___14761 = arguments.length;\nvar i__4532__auto___14762 = (0);\nwhile(true){\nif((i__4532__auto___14762 < len__4531__auto___14761)){\nargs__4534__auto__.push((arguments[i__4532__auto___14762]));\n\nvar G__14763 = (i__4532__auto___14762 + (1));\ni__4532__auto___14762 = G__14763;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ndevtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join('')),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n});\n\ndevtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq14755){\nvar G__14756 = cljs.core.first(seq14755);\nvar seq14755__$1 = cljs.core.next(seq14755);\nvar G__14757 = cljs.core.first(seq14755__$1);\nvar seq14755__$2 = cljs.core.next(seq14755__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14756,G__14757,seq14755__$2);\n});\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__3949__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ndevtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a);\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null));\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n});\n\ndevtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n});\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$type = true;\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\";\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4192__auto__,writer__4193__auto__,opt__4194__auto__){\nreturn cljs.core._write(writer__4193__auto__,\"devtools.formatters.printing/TemplateWriter\");\n});\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5455__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar tag = temp__5455__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__3938__auto__){\nvar or__3949__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__3938__auto__;\n}\n})())){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__14772_SHARP_){\nreturn !((cljs.core.meta(p1__14772_SHARP_) == null));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(''),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__14775 = opts;\nvar map__14775__$1 = ((((!((map__14775 == null)))?(((((map__14775.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__14775.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14775):map__14775);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14775__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__3949__auto__ = (function (){try{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e14781){var _e__13298__auto__ = e14781;\nreturn false;\n}})();\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\ntry{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e14786){var _e__13298__auto__ = e14786;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5455__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar atomic_markup = temp__5455__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR_14791 = devtools.formatters.state._STAR_current_state_STAR_;\ndevtools.formatters.state._STAR_current_state_STAR_ = devtools.formatters.state.get_current_state();\n\ntry{var map__14792 = opts;\nvar map__14792__$1 = ((((!((map__14792 == null)))?(((((map__14792.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__14792.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14792):map__14792);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14792__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR_14791;\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = ((function (writer,opts){\nreturn (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});})(writer,opts))\n;\nvar temp__5455__auto___14807 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5455__auto___14807)){\nvar managed_print_level_14808 = temp__5455__auto___14807;\nvar _STAR_print_level_STAR_14802_14809 = cljs.core._STAR_print_level_STAR_;\ncljs.core._STAR_print_level_STAR_ = managed_print_level_14808;\n\ntry{devtools.formatters.state.update_current_state_BANG_(((function (_STAR_print_level_STAR_14802_14809,managed_print_level_14808,temp__5455__auto___14807,writer,opts,job_fn){\nreturn (function (p1__14801_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__14801_SHARP_,null);\n});})(_STAR_print_level_STAR_14802_14809,managed_print_level_14808,temp__5455__auto___14807,writer,opts,job_fn))\n);\n\njob_fn();\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14802_14809;\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^M","~$devtools.format","^N","~$devtools.protocols","^O","~$devtools.formatters.state","^P","~$devtools.formatters.helpers","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^O","~$expandable?","^Q","~$ITemplate","^O","~$IDevtoolsFormat","^N","~$get-managed-print-level","^P","~$get-current-state","^P","~$ISurrogate","^O","~$should-render?","^Q","~$set-managed-print-level","^P","~$directly-printable?","^Q","~$pref","^M","~$push-object-to-current-history!","^P","~$update-current-state!","^P","~$abbreviated?","^Q","~$IFormat","^O","~$*current-state*","^P","~$cljs-value?","^Q","~$is-circular?","^P"],"^V",["^ ","^D","^D","^R","^R","^M","^M"],"~:form",["~#list",["~$ns","^H",["^1?",["^V",["^D","~:refer",["^C"]]]],["^1?",["^U",["^M","^1A",["^16"]],["^N","^1A",["^["]],["^O","^1A",["^Z","^X","^12","^1:"]],["^P","^1A",["^17","^1;","^11","^1=","^10","^14","^18"]],["^Q","^1A",["^1<","^Y","^19","^15","^13"]]]]]],"~:flags",["^ ","^V",["^F",[]],"^U",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^M","^N","^O","^P","^Q"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1538659970041,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer becasue pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i12",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",7],["^ ","^1O",45,"^1P",7],["^ ","^1O",0,"^1P",8]],"~i6",[["^ ","^1O",0,"^1P",7,"^G","devtools.formatters.printing/markup?"]],"~i15",[["^ ","^1O",98,"^1P",7,"^G","value"]]],"~i13",["^ ","~i2",[["^ ","^1O",0,"^1P",8],["^ ","^1O",7,"^1P",8]],"^1N",[["^ ","^1O",150,"^1P",8]],"^1R",[["^ ","^1O",150,"^1P",8,"^G","cljs.core/meta"]],"~i18",[["^ ","^1O",165,"^1P",8,"^G","value"]]],"^1Q",["^ ","~i0",[["^ ","^1O",0,"^1P",10],["^ ","^1O",46,"^1P",10],["^ ","^1O",0,"^1P",11]],"~i6",[["^ ","^1O",0,"^1P",10,"^G","devtools.formatters.printing/mark-as-markup"]],"~i22",[["^ ","^1O",100,"^1P",10,"^G","value"]]],"~i16",["^ ","~i2",[["^ ","^1O",0,"^1P",11],["^ ","^1O",33,"^1P",11],["^ ","^1O",76,"^1P",11],["^ ","^1O",189,"^1P",11]],"~i3",[["^ ","^1O",7,"^1P",11,"^G","cljs.core/with-meta"]],"^1R",[["^ ","^1O",27,"^1P",11,"^G","value"]]],"^1S",["^ ","~i0",[["^ ","^1O",0,"^1P",13],["^ ","^1O",0,"^1P",13],["^ ","^1O",44,"^1P",13],["^ ","^1O",96,"^1P",13,"^G","var_args"],["^ ","^1O",0,"^1P",14],["^ ","^1O",0,"^1P",14],["^ ","^1O",4,"^1P",14,"^G","args__4534__auto__"],["^ ","^1O",25,"^1P",14],["^ ","^1O",0,"^1P",15],["^ ","^1O",0,"^1P",15],["^ ","^1O",4,"^1P",15,"^G","len__4531__auto__"],["^ ","^1O",30,"^1P",15],["^ ","^1O",30,"^1P",15],["^ ","^1O",0,"^1P",16],["^ ","^1O",0,"^1P",16],["^ ","^1O",4,"^1P",16,"^G","i__4532__auto__"],["^ ","^1O",28,"^1P",16],["^ ","^1O",0,"^1P",18],["^ ","^1O",0,"^1P",18],["^ ","^1O",3,"^1P",18],["^ ","^1O",4,"^1P",18,"^G","i__4532__auto__"],["^ ","^1O",28,"^1P",18,"^G","len__4531__auto__"],["^ ","^1O",0,"^1P",19],["^ ","^1O",0,"^1P",19],["^ ","^1O",0,"^1P",19,"^G","args__4534__auto__"],["^ ","^1O",24,"^1P",19],["^ ","^1O",25,"^1P",19],["^ ","^1O",35,"^1P",19,"^G","i__4532__auto__"],["^ ","^1O",0,"^1P",21],["^ ","^1O",15,"^1P",21],["^ ","^1O",16,"^1P",21,"^G","i__4532__auto__"],["^ ","^1O",40,"^1P",21],["^ ","^1O",0,"^1P",25],["^ ","^1O",0,"^1P",29],["^ ","^1O",4,"^1P",29,"^G","argseq__4535__auto__"],["^ ","^1O",27,"^1P",29],["^ ","^1O",29,"^1P",29],["^ ","^1O",30,"^1P",29],["^ ","^1O",36,"^1P",29],["^ ","^1O",36,"^1P",29,"^G","args__4534__auto__"],["^ ","^1O",64,"^1P",29],["^ ","^1O",64,"^1P",29],["^ ","^1O",69,"^1P",29,"^G","cljs.core/IndexedSeq"],["^ ","^1O",90,"^1P",29],["^ ","^1O",90,"^1P",29,"^G","args__4534__auto__"],["^ ","^1O",115,"^1P",29],["^ ","^1O",120,"^1P",29],["^ ","^1O",124,"^1P",29],["^ ","^1O",131,"^1P",29],["^ ","^1O",0,"^1P",30],["^ ","^1O",0,"^1P",30],["^ ","^1O",7,"^1P",30,"^G","devtools.formatters.printing/build-markup"],["^ ","^1O",86,"^1P",30],["^ ","^1O",87,"^1P",30],["^ ","^1O",97,"^1P",30],["^ ","^1O",103,"^1P",30],["^ ","^1O",104,"^1P",30],["^ ","^1O",114,"^1P",30],["^ ","^1O",120,"^1P",30,"^G","argseq__4535__auto__"],["^ ","^1O",0,"^1P",33],["^ ","^1O",0,"^1P",33],["^ ","^1O",0,"^1P",33],["^ ","^1O",0,"^1P",33,"^G","devtools.formatters.printing/build-markup"],["^ ","^1O",81,"^1P",33],["^ ","^1O",0,"^1P",34],["^ ","^1O",0,"^1P",43],["^ ","^1O",0,"^1P",43],["^ ","^1O",0,"^1P",43,"^G","devtools.formatters.printing/build-markup"],["^ ","^1O",68,"^1P",43],["^ ","^1O",0,"^1P",45],["^ ","^1O",0,"^1P",46],["^ ","^1O",0,"^1P",46],["^ ","^1O",0,"^1P",46,"^G","devtools.formatters.printing/build-markup"],["^ ","^1O",62,"^1P",46],["^ ","^1O",73,"^1P",46,"^G","seq14755"],["^ ","^1O",0,"^1P",47],["^ ","^1O",0,"^1P",47],["^ ","^1O",4,"^1P",47,"^G","G__14756"],["^ ","^1O",15,"^1P",47],["^ ","^1O",15,"^1P",47,"^G","cljs.core/first"],["^ ","^1O",31,"^1P",47,"^G","seq14755"],["^ ","^1O",4,"^1P",48,"^G","seq14755"],["^ ","^1O",19,"^1P",48],["^ ","^1O",19,"^1P",48,"^G","cljs.core/next"],["^ ","^1O",34,"^1P",48,"^G","seq14755"],["^ ","^1O",4,"^1P",49,"^G","G__14757"],["^ ","^1O",15,"^1P",49],["^ ","^1O",15,"^1P",49,"^G","cljs.core/first"],["^ ","^1O",31,"^1P",49,"^G","seq14755"],["^ ","^1O",4,"^1P",50,"^G","seq14755"],["^ ","^1O",19,"^1P",50],["^ ","^1O",19,"^1P",50,"^G","cljs.core/next"],["^ ","^1O",34,"^1P",50,"^G","seq14755"],["^ ","^1O",0,"^1P",51],["^ ","^1O",0,"^1P",51],["^ ","^1O",4,"^1P",51,"^G","self__4518__auto__"],["^ ","^1O",25,"^1P",51],["^ ","^1O",0,"^1P",52],["^ ","^1O",0,"^1P",52],["^ ","^1O",7,"^1P",52,"^G","self__4518__auto__"],["^ ","^1O",63,"^1P",52,"^G","G__14756"],["^ ","^1O",72,"^1P",52,"^G","G__14757"],["^ ","^1O",81,"^1P",52,"^G","seq14755"],["^ ","^1O",0,"^1P",55]],"~i6",[["^ ","^1O",0,"^1P",13,"^G","devtools.formatters.printing/build-markup"]],"~i20",[["^ ","^1O",92,"^1P",33,"^G","markup-db"]],"~i30",[["^ ","^1O",102,"^1P",33,"^G","fn-key"]],"~i39",[["^ ","^1O",109,"^1P",33,"^G","args"]]],"~i19",["^ ","~i2",[["^ ","^1O",0,"^1P",34],["^ ","^1O",0,"^1P",35]],"~i8",[["^ ","^1O",4,"^1P",34,"^G","f"]],"~i10",[["^ ","^1O",8,"^1P",34]],"~i11",[["^ ","^1O",8,"^1P",34,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1Q",[["^ ","^1O",52,"^1P",34,"^G","markup-db"]],"~i25",[["^ ","^1O",62,"^1P",34,"^G","fn-key"]]],"^1V",["^ ","~i4",[["^ ","^1O",0,"^1P",35],["^ ","^1O",0,"^1P",36],["^ ","^1O",0,"^1P",37],["^ ","^1O",0,"^1P",37],["^ ","^1O",6,"^1P",37],["^ ","^1O",11,"^1P",37,"^G","js/Error"],["^ ","^1O",17,"^1P",37],["^ ","^1O",18,"^1P",37],["^ ","^1O",183,"^1P",37],["^ ","^1O",188,"^1P",37]],"^1N",[["^ ","^1O",20,"^1P",35,"^G","f"]],"~i14",[["^ ","^1O",80,"^1P",37],["^ ","^1O",81,"^1P",37]],"~i58",[["^ ","^1O",164,"^1P",37,"^G","fn-key"]]],"~i21",["^ ","~i4",[["^ ","^1O",0,"^1P",40]],"~i5",[["^ ","^1O",7,"^1P",40,"^G","devtools.formatters.printing/mark-as-markup"]],"^1V",[["^ ","^1O",51,"^1P",40]],"^23",[["^ ","^1O",51,"^1P",40,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1O",97,"^1P",40,"^G","f"]],"~i29",[["^ ","^1O",99,"^1P",40,"^G","args"]]],"~i23",["^ ","~i0",[["^ ","^1O",0,"^1P",55],["^ ","^1O",65,"^1P",55],["^ ","^1O",0,"^1P",56]],"~i6",[["^ ","^1O",0,"^1P",55,"^G","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i41",[["^ ","^1O",138,"^1P",55,"^G","markup-db"]],"~i51",[["^ ","^1O",148,"^1P",55,"^G","value"]]],"~i24",["^ ","~i2",[["^ ","^1O",0,"^1P",56]],"~i6",[["^ ","^1O",20,"^1P",56],["^ ","^1O",37,"^1P",56,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",57],["^ ","^1O",0,"^1P",57],["^ ","^1O",20,"^1P",57,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",58,"^G","or__3949__auto__"]],"^1Z",[["^ ","^1O",56,"^1P",56]],"^1[",[["^ ","^1O",56,"^1P",56,"^G","devtools.formatters.helpers/directly-printable?"]],"~i31",[["^ ","^1O",110,"^1P",56,"^G","value"]],"~i38",[["^ ","^1O",0,"^1P",60]],"^1X",[["^ ","^1O",7,"^1P",60,"^G","devtools.formatters.printing/markup?"]],"~i47",[["^ ","^1O",50,"^1P",60,"^G","value"]]],"^20",["^ ","~i4",[["^ ","^1O",0,"^1P",63,"^G","value"]]],"~i26",["^ ","~i4",[["^ ","^1O",0,"^1P",65],["^ ","^1O",96,"^1P",65]],"~i5",[["^ ","^1O",7,"^1P",65,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^1S",[["^ ","^1O",86,"^1P",65,"^G","markup-db"]],"~i49",[["^ ","^1O",228,"^1P",65,"^G","value"]]],"^1W",["^ ","~i0",[["^ ","^1O",0,"^1P",68],["^ ","^1O",0,"^1P",68],["^ ","^1O",0,"^1P",79],["^ ","^1O",0,"^1P",79],["^ ","^1O",0,"^1P",79],["^ ","^1O",0,"^1P",79],["^ ","^1O",62,"^1P",79],["^ ","^1O",0,"^1P",81],["^ ","^1O",0,"^1P",81],["^ ","^1O",8,"^1P",81],["^ ","^1O",0,"^1P",82],["^ ","^1O",0,"^1P",85],["^ ","^1O",0,"^1P",85],["^ ","^1O",0,"^1P",85],["^ ","^1O",66,"^1P",85],["^ ","^1O",0,"^1P",87],["^ ","^1O",0,"^1P",87],["^ ","^1O",8,"^1P",87],["^ ","^1O",0,"^1P",88],["^ ","^1O",0,"^1P",91],["^ ","^1O",0,"^1P",91],["^ ","^1O",0,"^1P",91],["^ ","^1O",89,"^1P",91],["^ ","^1O",0,"^1P",93],["^ ","^1O",0,"^1P",93],["^ ","^1O",12,"^1P",93],["^ ","^1O",0,"^1P",94],["^ ","^1O",0,"^1P",97],["^ ","^1O",0,"^1P",97],["^ ","^1O",0,"^1P",97],["^ ","^1O",89,"^1P",97],["^ ","^1O",0,"^1P",99],["^ ","^1O",0,"^1P",99],["^ ","^1O",12,"^1P",99],["^ ","^1O",0,"^1P",100],["^ ","^1O",0,"^1P",100],["^ ","^1O",0,"^1P",103],["^ ","^1O",0,"^1P",103],["^ ","^1O",55,"^1P",103],["^ ","^1O",0,"^1P",104],["^ ","^1O",0,"^1P",104],["^ ","^1O",90,"^1P",104],["^ ","^1O",110,"^1P",104],["^ ","^1O",170,"^1P",104],["^ ","^1O",213,"^1P",104],["^ ","^1O",271,"^1P",104],["^ ","^1O",285,"^1P",104],["^ ","^1O",0,"^1P",107],["^ ","^1O",0,"^1P",107],["^ ","^1O",61,"^1P",107],["^ ","^1O",0,"^1P",109],["^ ","^1O",0,"^1P",109],["^ ","^1O",64,"^1P",109],["^ ","^1O",0,"^1P",111],["^ ","^1O",0,"^1P",111],["^ ","^1O",69,"^1P",111],["^ ","^1O",80,"^1P",111,"^G","this__4192__auto__"],["^ ","^1O",99,"^1P",111,"^G","writer__4193__auto__"],["^ ","^1O",120,"^1P",111,"^G","opt__4194__auto__"],["^ ","^1O",0,"^1P",112],["^ ","^1O",0,"^1P",112],["^ ","^1O",7,"^1P",112,"^G","cljs.core/-write"],["^ ","^1O",24,"^1P",112,"^G","writer__4193__auto__"],["^ ","^1O",45,"^1P",112],["^ ","^1O",0,"^1P",115],["^ ","^1O",51,"^1P",118],["^ ","^1O",0,"^1P",119],["^ ","^1O",0,"^1P",119],["^ ","^1O",12,"^1P",119,"^G","devtools.formatters.printing/TemplateWriter"]],"~i9",[["^ ","^1O",0,"^1P",79,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",85,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",91,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",97,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",103,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",107,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",109,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",111,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",0,"^1P",118,"^G","devtools.formatters.printing/->TemplateWriter"],["^ ","^1O",0,"^1P",122,"^G","devtools.formatters.printing/TemplateWriter"]],"~i35",[["^ ","^1O",110,"^1P",118,"^G","group"],["^ ","^1O",56,"^1P",119,"^G","group"]],"^27",[["^ ","^1O",116,"^1P",118,"^G","markup-db"],["^ ","^1O",62,"^1P",119,"^G","markup-db"]]],"~i32",["^ ","^1Z",[["^ ","^1O",4,"^1P",81,"^G","_"]],"^1N",[["^ ","^1O",73,"^1P",79,"^G","a"]],"^1Q",[["^ ","^1O",0,"^1P",82]],"^23",[["^ ","^1O",7,"^1P",82,"^G","group"]],"^24",[["^ ","^1O",22,"^1P",82]],"~i28",[["^ ","^1O",22,"^1P",82,"^G","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^2?",[["^ ","^1O",69,"^1P",82,"^G","group"]],"^27",[["^ ","^1O",82,"^1P",82,"^G","a"]]],"~i33",["^ ","^21",[["^ ","^1O",4,"^1P",87,"^G","_"]],"~i17",[["^ ","^1O",0,"^1P",88,"^G","group"]]],"^2?",["^ ","^1[",[["^ ","^1O",100,"^1P",91,"^G","_"],["^ ","^1O",4,"^1P",93,"^G","_"]],"^1R",[["^ ","^1O",102,"^1P",91,"^G","o"]],"^1U",[["^ ","^1O",0,"^1P",94]],"^1T",[["^ ","^1O",7,"^1P",94,"^G","group"]],"^2A",[["^ ","^1O",22,"^1P",94],["^ ","^1O",82,"^1P",94]],"^25",[["^ ","^1O",22,"^1P",94,"^G","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1O",69,"^1P",94,"^G","group"]],"~i43",[["^ ","^1O",165,"^1P",94]],"~i44",[["^ ","^1O",165,"^1P",94,"^G","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i78",[["^ ","^1O",228,"^1P",94,"^G","markup-db"]],"~i88",[["^ ","^1O",245,"^1P",94,"^G","o"]]],"^2D",["^ ","^1[",[["^ ","^1O",100,"^1P",97,"^G","_"],["^ ","^1O",4,"^1P",99,"^G","_"]]],"^2;",["^ ","~i0",[["^ ","^1O",0,"^1P",122],["^ ","^1O",52,"^1P",122],["^ ","^1O",0,"^1P",123]],"~i6",[["^ ","^1O",0,"^1P",122,"^G","devtools.formatters.printing/make-template-writer"]],"^2A",[["^ ","^1O",112,"^1P",122,"^G","markup-db"]]],"^1X",["^ ","~i2",[["^ ","^1O",0,"^1P",123],["^ ","^1O",12,"^1P",123,"^G","devtools.formatters.printing/TemplateWriter"],["^ ","^1O",56,"^1P",123]],"^1T",[["^ ","^1O",89,"^1P",123,"^G","markup-db"]]],"^2E",["^ ","~i0",[["^ ","^1O",0,"^1P",125],["^ ","^1O",56,"^1P",125],["^ ","^1O",0,"^1P",126]],"~i6",[["^ ","^1O",0,"^1P",125,"^G","devtools.formatters.printing/already-reference?"]],"^2=",[["^ ","^1O",120,"^1P",125,"^G","group"]]],"^2F",["^ ","~i2",[["^ ","^1O",0,"^1P",126],["^ ","^1O",4,"^1P",126,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",127],["^ ","^1O",0,"^1P",127],["^ ","^1O",20,"^1P",127,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",128],["^ ","^1O",10,"^1P",128,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",129],["^ ","^1O",0,"^1P",131]],"^1[",[["^ ","^1O",4,"^1P",128,"^G","tag"]],"^1Q",[["^ ","^1O",25,"^1P",126]],"^1U",[["^ ","^1O",25,"^1P",126,"^G","cljs.core/first"]],"^1T",[["^ ","^1O",41,"^1P",126]],"^26",[["^ ","^1O",41,"^1P",126,"^G","cljs.core/first"]],"^25",[["^ ","^1O",57,"^1P",126,"^G","group"]]],"~i45",["^ ","~i4",[["^ ","^1O",0,"^1P",129],["^ ","^1O",56,"^1P",129]],"~i5",[["^ ","^1O",7,"^1P",129,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^1O",52,"^1P",129,"^G","tag"]]],"^2<",["^ ","~i0",[["^ ","^1O",0,"^1P",134],["^ ","^1O",65,"^1P",134],["^ ","^1O",0,"^1P",135]],"~i6",[["^ ","^1O",0,"^1P",134,"^G","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^27",[["^ ","^1O",138,"^1P",134,"^G","group"]],"^2<",[["^ ","^1O",144,"^1P",134,"^G","obj"]],"^28",[["^ ","^1O",148,"^1P",134,"^G","markup-db"]]],"~i48",["^ ","~i2",[["^ ","^1O",0,"^1P",135]],"~i6",[["^ ","^1O",20,"^1P",135],["^ ","^1O",37,"^1P",135,"^G","and__3938__auto__"],["^ ","^1O",0,"^1P",136],["^ ","^1O",0,"^1P",136],["^ ","^1O",3,"^1P",136,"^G","and__3938__auto__"],["^ ","^1O",0,"^1P",144,"^G","and__3938__auto__"]],"^1[",[["^ ","^1O",57,"^1P",135]],"^1N",[["^ ","^1O",57,"^1P",135,"^G","cljs.core/not"]],"^1U",[["^ ","^1O",71,"^1P",135]],"^2C",[["^ ","^1O",71,"^1P",135,"^G","devtools.formatters.printing/already-reference?"]],"^2D",[["^ ","^1O",125,"^1P",135,"^G","group"]]],"^2>",["^ ","^1[",[["^ ","^1O",0,"^1P",137],["^ ","^1O",4,"^1P",137,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",138],["^ ","^1O",0,"^1P",138],["^ ","^1O",20,"^1P",138,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",139,"^G","or__3949__auto__"]],"^1Q",[["^ ","^1O",23,"^1P",137]],"^1U",[["^ ","^1O",23,"^1P",137,"^G","devtools.formatters.helpers/expandable?"]],"^2A",[["^ ","^1O",69,"^1P",137,"^G","obj"]],"^2B",[["^ ","^1O",0,"^1P",141]],"~i34",[["^ ","^1O",7,"^1P",141,"^G","devtools.formatters.helpers/abbreviated?"]],"^2<",[["^ ","^1O",54,"^1P",141,"^G","group"]]],"~i50",["^ ","~i4",[["^ ","^1O",0,"^1P",147],["^ ","^1O",0,"^1P",150],["^ ","^1O",0,"^1P",150]],"^1Z",[["^ ","^1O",4,"^1P",147,"^G","expandable-markup"]],"^2A",[["^ ","^1O",24,"^1P",147],["^ ","^1O",122,"^1P",147]],"^25",[["^ ","^1O",24,"^1P",147,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^2?",[["^ ","^1O",70,"^1P",147,"^G","devtools.formatters.printing/build-markup"]],"^2J",[["^ ","^1O",112,"^1P",147,"^G","markup-db"]],"~i70",[["^ ","^1O",187,"^1P",147,"^G","group"]]],"^28",["^ ","^1Z",[["^ ","^1O",4,"^1P",148,"^G","surrogate-markup"]],"^24",[["^ ","^1O",23,"^1P",148],["^ ","^1O",112,"^1P",148],["^ ","^1O",254,"^1P",148]],"^2A",[["^ ","^1O",23,"^1P",148,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^27",[["^ ","^1O",102,"^1P",148,"^G","markup-db"]],"~i66",[["^ ","^1O",232,"^1P",148,"^G","obj"]],"^2M",[["^ ","^1O",236,"^1P",148,"^G","expandable-markup"]]],"~i52",["^ ","^1Z",[["^ ","^1O",4,"^1P",149,"^G","reference-markup"]],"^24",[["^ ","^1O",23,"^1P",149],["^ ","^1O",112,"^1P",149]],"^2A",[["^ ","^1O",23,"^1P",149,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^27",[["^ ","^1O",102,"^1P",149,"^G","markup-db"]],"~i62",[["^ ","^1O",226,"^1P",149,"^G","surrogate-markup"]]],"~i53",["^ ","~i7",[["^ ","^1O",90,"^1P",150,"^G","reference-markup"]]],"~i54",["^ ","~i4",[["^ ","^1O",0,"^1P",152,"^G","group"]]],"~i56",["^ ","~i0",[["^ ","^1O",0,"^1P",155],["^ ","^1O",72,"^1P",155],["^ ","^1O",0,"^1P",156]],"~i6",[["^ ","^1O",0,"^1P",155,"^G","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2J",[["^ ","^1O",152,"^1P",155,"^G","group"]],"^2R",[["^ ","^1O",158,"^1P",155,"^G","markup-db"]],"~i64",[["^ ","^1O",168,"^1P",155,"^G","circular?"]]],"~i57",["^ ","~i2",[["^ ","^1O",0,"^1P",156],["^ ","^1O",0,"^1P",157]],"~i6",[["^ ","^1O",20,"^1P",156,"^G","circular?"]]],"^22",["^ ","~i5",[["^ ","^1O",90,"^1P",157],["^ ","^1O",188,"^1P",157]],"~i6",[["^ ","^1O",90,"^1P",157,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^1N",[["^ ","^1O",136,"^1P",157,"^G","devtools.formatters.printing/build-markup"]],"^20",[["^ ","^1O",178,"^1P",157,"^G","markup-db"]],"~i55",[["^ ","^1O",268,"^1P",157,"^G","group"]]],"~i59",["^ ","~i4",[["^ ","^1O",0,"^1P",159,"^G","group"]]],"~i61",["^ ","~i0",[["^ ","^1O",0,"^1P",162],["^ ","^1O",60,"^1P",162],["^ ","^1O",0,"^1P",163]],"~i6",[["^ ","^1O",0,"^1P",162,"^G","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2D",[["^ ","^1O",128,"^1P",162,"^G","group"]],"~i42",[["^ ","^1O",134,"^1P",162,"^G","value"]],"^2J",[["^ ","^1O",140,"^1P",162,"^G","markup-db"]]],"^2P",["^ ","~i2",[["^ ","^1O",0,"^1P",163],["^ ","^1O",0,"^1P",166]],"~i6",[["^ ","^1O",20,"^1P",163],["^ ","^1O",69,"^1P",163],["^ ","^1O",144,"^1P",163],["^ ","^1O",155,"^1P",163,"^G","p1__14772#"],["^ ","^1O",0,"^1P",164]],"~i7",[["^ ","^1O",20,"^1P",163,"^G","devtools.formatters.helpers/should-render?"]],"^2D",[["^ ","^1O",138,"^1P",163,"^G","value"]],"^2E",[["^ ","^1O",0,"^1P",164],["^ ","^1O",9,"^1P",164],["^ ","^1O",46,"^1P",164]],"^2L",[["^ ","^1O",10,"^1P",164],["^ ","^1O",25,"^1P",164,"^G","p1__14772#"]],"^28",[["^ ","^1O",10,"^1P",164,"^G","cljs.core/meta"]]],"~i63",["^ ","~i5",[["^ ","^1O",90,"^1P",166]],"~i6",[["^ ","^1O",90,"^1P",166,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^1O",136,"^1P",166]],"^1R",[["^ ","^1O",136,"^1P",166,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1O",184,"^1P",166],["^ ","^1O",184,"^1P",166]],"^2D",[["^ ","^1O",284,"^1P",166,"^G","markup-db"]],"^2<",[["^ ","^1O",295,"^1P",166]],"^2J",[["^ ","^1O",295,"^1P",166,"^G","cljs.core/meta"]],"^2Q",[["^ ","^1O",310,"^1P",166,"^G","value"]],"^2X",[["^ ","^1O",318,"^1P",166,"^G","group"]]],"^2T",["^ ","~i4",[["^ ","^1O",0,"^1P",168,"^G","group"]]],"~i77",["^ ","~i0",[["^ ","^1O",0,"^1P",171],["^ ","^1O",61,"^1P",171],["^ ","^1O",0,"^1P",172]],"~i6",[["^ ","^1O",0,"^1P",171,"^G","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"~i37",[["^ ","^1O",130,"^1P",171,"^G","group"]],"^2E",[["^ ","^1O",136,"^1P",171,"^G","obj"]],"^2<",[["^ ","^1O",140,"^1P",171,"^G","markup-db"]]],"^2G",["^ ","~i2",[["^ ","^1O",0,"^1P",172],["^ ","^1O",0,"^1P",173],["^ ","^1O",0,"^1P",175],["^ ","^1O",0,"^1P",176],["^ ","^1O",0,"^1P",178]]],"~i79",["^ ","~i4",[["^ ","^1O",3,"^1P",172]]],"~i80",["^ ","~i6",[["^ ","^1O",5,"^1P",172]],"^1[",[["^ ","^1O",7,"^1P",172],["^ ","^1O",75,"^1P",172]],"^1N",[["^ ","^1O",7,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^21",[["^ ","^1O",52,"^1P",172]],"^1Q",[["^ ","^1O",52,"^1P",172,"^G","cljs.core/count"]],"^23",[["^ ","^1O",68,"^1P",172,"^G","group"]],"^2:",[["^ ","^1O",85,"^1P",172],["^ ","^1O",185,"^1P",172]],"^2@",[["^ ","^1O",85,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1O",130,"^1P",172],["^ ","^1O",180,"^1P",172]],"^2?",[["^ ","^1O",130,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1O",174,"^1P",172,"^G","group"]],"~i60",[["^ ","^1O",202,"^1P",172],["^ ","^1O",302,"^1P",172]],"^2X",[["^ ","^1O",202,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Z",[["^ ","^1O",247,"^1P",172],["^ ","^1O",297,"^1P",172]],"^2T",[["^ ","^1O",247,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i68",[["^ ","^1O",291,"^1P",172,"^G","group"]]],"~i81",["^ ","~i6",[["^ ","^1O",316,"^1P",172]],"^1[",[["^ ","^1O",318,"^1P",172],["^ ","^1O",386,"^1P",172]],"^1N",[["^ ","^1O",318,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^21",[["^ ","^1O",363,"^1P",172]],"^1Q",[["^ ","^1O",363,"^1P",172,"^G","cljs.core/count"]],"^23",[["^ ","^1O",379,"^1P",172,"^G","group"]],"^2:",[["^ ","^1O",396,"^1P",172],["^ ","^1O",496,"^1P",172]],"^2@",[["^ ","^1O",396,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1O",441,"^1P",172],["^ ","^1O",491,"^1P",172]],"^2?",[["^ ","^1O",441,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1O",485,"^1P",172,"^G","group"]],"^33",[["^ ","^1O",513,"^1P",172],["^ ","^1O",613,"^1P",172]],"^2X",[["^ ","^1O",513,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Z",[["^ ","^1O",558,"^1P",172],["^ ","^1O",608,"^1P",172]],"^2T",[["^ ","^1O",558,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^1O",602,"^1P",172,"^G","group"]]],"~i82",["^ ","~i6",[["^ ","^1O",625,"^1P",172]],"^1[",[["^ ","^1O",627,"^1P",172],["^ ","^1O",695,"^1P",172]],"^1N",[["^ ","^1O",627,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^21",[["^ ","^1O",672,"^1P",172]],"^1Q",[["^ ","^1O",672,"^1P",172,"^G","cljs.core/count"]],"^23",[["^ ","^1O",688,"^1P",172,"^G","group"]],"^2:",[["^ ","^1O",705,"^1P",172],["^ ","^1O",805,"^1P",172]],"^2@",[["^ ","^1O",705,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1O",750,"^1P",172],["^ ","^1O",800,"^1P",172]],"^2?",[["^ ","^1O",750,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1X",[["^ ","^1O",794,"^1P",172,"^G","group"]],"^33",[["^ ","^1O",822,"^1P",172],["^ ","^1O",922,"^1P",172]],"^2X",[["^ ","^1O",822,"^1P",172,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2Z",[["^ ","^1O",867,"^1P",172],["^ ","^1O",917,"^1P",172]],"^2T",[["^ ","^1O",867,"^1P",172,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^34",[["^ ","^1O",911,"^1P",172,"^G","group"]]],"~i83",["^ ","~i5",[["^ ","^1O",90,"^1P",173],["^ ","^1O",179,"^1P",173]],"~i6",[["^ ","^1O",90,"^1P",173,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^1Y",[["^ ","^1O",169,"^1P",173,"^G","markup-db"]],"^2<",[["^ ","^1O",307,"^1P",173,"^G","obj"]]],"~i85",["^ ","~i4",[["^ ","^1O",3,"^1P",175]],"~i9",[["^ ","^1O",5,"^1P",175],["^ ","^1O",73,"^1P",175]],"^1Z",[["^ ","^1O",5,"^1P",175,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^1O",50,"^1P",175]],"^1R",[["^ ","^1O",50,"^1P",175,"^G","cljs.core/count"]],"^1Y",[["^ ","^1O",66,"^1P",175,"^G","group"]],"^25",[["^ ","^1O",83,"^1P",175],["^ ","^1O",183,"^1P",175]],"^1W",[["^ ","^1O",83,"^1P",175,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^1O",128,"^1P",175],["^ ","^1O",178,"^1P",175]],"^2B",[["^ ","^1O",128,"^1P",175,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1O",172,"^1P",175,"^G","group"]],"^2O",[["^ ","^1O",194,"^1P",175]],"^2Q",[["^ ","^1O",194,"^1P",175,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2V",[["^ ","^1O",239,"^1P",175]],"^33",[["^ ","^1O",284,"^1P",175,"^G","obj"]],"~i65",[["^ ","^1O",299,"^1P",175],["^ ","^1O",349,"^1P",175]],"^2N",[["^ ","^1O",299,"^1P",175,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^1O",343,"^1P",175,"^G","group"]],"^32",[["^ ","^1O",360,"^1P",175],["^ ","^1O",460,"^1P",175]],"^35",[["^ ","^1O",360,"^1P",175,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^37",[["^ ","^1O",405,"^1P",175],["^ ","^1O",455,"^1P",175]],"~i84",[["^ ","^1O",405,"^1P",175,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2H",[["^ ","^1O",449,"^1P",175,"^G","group"]]],"~i86",["^ ","~i5",[["^ ","^1O",90,"^1P",176],["^ ","^1O",140,"^1P",176]],"~i6",[["^ ","^1O",90,"^1P",176,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1O",134,"^1P",176,"^G","group"]],"^1Y",[["^ ","^1O",145,"^1P",176],["^ ","^1O",187,"^1P",176]],"^1V",[["^ ","^1O",145,"^1P",176,"^G","devtools.formatters.printing/build-markup"]],"^28",[["^ ","^1O",265,"^1P",176,"^G","obj"]],"^2S",[["^ ","^1O",270,"^1P",176],["^ ","^1O",320,"^1P",176]],"^2U",[["^ ","^1O",270,"^1P",176,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^1O",314,"^1P",176,"^G","group"]]],"^2H",["^ ","^1Z",[["^ ","^1O",0,"^1P",178,"^G","group"]]],"~i90",["^ ","~i0",[["^ ","^1O",0,"^1P",183],["^ ","^1O",59,"^1P",183],["^ ","^1O",0,"^1P",184]],"~i6",[["^ ","^1O",0,"^1P",183,"^G","devtools.formatters.printing/post-process-printed-output"]],"^2?",[["^ ","^1O",126,"^1P",183,"^G","output-group"]],"^2J",[["^ ","^1O",139,"^1P",183,"^G","obj"]],"^2O",[["^ ","^1O",143,"^1P",183,"^G","markup-db"]],"^2P",[["^ ","^1O",153,"^1P",183,"^G","circular?"]]],"~i91",["^ ","~i6",[["^ ","^1O",257,"^1P",184,"^G","output-group"]]],"~i92",["^ ","~i6",[["^ ","^1O",198,"^1P",184]],"~i7",[["^ ","^1O",198,"^1P",184,"^G","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"^30",[["^ ","^1O",270,"^1P",184,"^G","obj"]],"^27",[["^ ","^1O",274,"^1P",184,"^G","markup-db"]]],"~i93",["^ ","~i6",[["^ ","^1O",135,"^1P",184]],"~i7",[["^ ","^1O",135,"^1P",184,"^G","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^27",[["^ ","^1O",285,"^1P",184,"^G","obj"]],"^2I",[["^ ","^1O",289,"^1P",184,"^G","markup-db"]]],"~i94",["^ ","~i6",[["^ ","^1O",65,"^1P",184]],"~i7",[["^ ","^1O",65,"^1P",184,"^G","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2J",[["^ ","^1O",300,"^1P",184,"^G","markup-db"]],"^22",[["^ ","^1O",310,"^1P",184,"^G","circular?"]]],"~i95",["^ ","~i6",[["^ ","^1O",0,"^1P",184]],"~i7",[["^ ","^1O",7,"^1P",184,"^G","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2D",[["^ ","^1O",327,"^1P",184,"^G","obj"]],"~i40",[["^ ","^1O",331,"^1P",184,"^G","markup-db"]]],"~i99",["^ ","~i0",[["^ ","^1O",0,"^1P",186],["^ ","^1O",47,"^1P",186],["^ ","^1O",0,"^1P",187]],"~i6",[["^ ","^1O",0,"^1P",186,"^G","devtools.formatters.printing/alt-printer-job"]],"^26",[["^ ","^1O",102,"^1P",186,"^G","obj"]],"^24",[["^ ","^1O",106,"^1P",186,"^G","writer"]],"^2K",[["^ ","^1O",113,"^1P",186,"^G","opts"]]],"~i100",["^ ","~i2",[["^ ","^1O",0,"^1P",187],["^ ","^1O",4,"^1P",187,"^G","map__14775"],["^ ","^1O",4,"^1P",188,"^G","map__14775"],["^ ","^1O",21,"^1P",188],["^ ","^1O",23,"^1P",188],["^ ","^1O",25,"^1P",188],["^ ","^1O",27,"^1P",188],["^ ","^1O",28,"^1P",188,"^G","map__14775"],["^ ","^1O",42,"^1P",188],["^ ","^1O",50,"^1P",188],["^ ","^1O",52,"^1P",188],["^ ","^1O",54,"^1P",188],["^ ","^1O",55,"^1P",188],["^ ","^1O",55,"^1P",188,"^G","map__14775"],["^ ","^1O",104,"^1P",188],["^ ","^1O",115,"^1P",188],["^ ","^1O",116,"^1P",188,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1O",148,"^1P",188],["^ ","^1O",148,"^1P",188,"^G","map__14775"],["^ ","^1O",179,"^1P",188],["^ ","^1O",184,"^1P",188],["^ ","^1O",191,"^1P",188],["^ ","^1O",199,"^1P",188],["^ ","^1O",199,"^1P",188,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1O",245,"^1P",188,"^G","cljs.core/hash-map"],["^ ","^1O",264,"^1P",188,"^G","map__14775"],["^ ","^1O",276,"^1P",188,"^G","map__14775"],["^ ","^1O",16,"^1P",189],["^ ","^1O",16,"^1P",189,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1O",60,"^1P",189,"^G","map__14775"],["^ ","^1O",75,"^1P",189],["^ ","^1O",0,"^1P",190]],"^1U",[["^ ","^1O",4,"^1P",189,"^G","markup-db"]],"^2A",[["^ ","^1O",17,"^1P",187,"^G","opts"]]],"~i101",["^ ","~i4",[["^ ","^1O",0,"^1P",190]],"~i8",[["^ ","^1O",20,"^1P",190],["^ ","^1O",37,"^1P",190,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",206],["^ ","^1O",0,"^1P",206],["^ ","^1O",20,"^1P",206,"^G","or__3949__auto__"],["^ ","^1O",0,"^1P",207,"^G","or__3949__auto__"]],"^1N",[["^ ","^1O",56,"^1P",190],["^ ","^1O",73,"^1P",190],["^ ","^1O",73,"^1P",190],["^ ","^1O",76,"^1P",190],["^ ","^1O",78,"^1P",190],["^ ","^1O",86,"^1P",190],["^ ","^1O",0,"^1P",191],["^ ","^1O",3,"^1P",191],["^ ","^1O",5,"^1P",191],["^ ","^1O",16,"^1P",191],["^ ","^1O",17,"^1P",191,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1O",49,"^1P",191],["^ ","^1O",0,"^1P",192],["^ ","^1O",0,"^1P",194],["^ ","^1O",3,"^1P",194],["^ ","^1O",5,"^1P",194],["^ ","^1O",0,"^1P",195],["^ ","^1O",7,"^1P",195,"^G","cljs.core/native-satisfies?"],["^ ","^1O",0,"^1P",197],["^ ","^1O",0,"^1P",201],["^ ","^1O",7,"^1P",201,"^G","cljs.core/native-satisfies?"],["^ ","^1O",16,"^1P",203],["^ ","^1O",20,"^1P",203,"^G","_e__13298__auto__"],["^ ","^1O",40,"^1P",203,"^G","e14781"],["^ ","^1O",0,"^1P",204],["^ ","^1O",0,"^1P",204]],"^3B",[["^ ","^1O",41,"^1P",195,"^G","devtools.format/IDevtoolsFormat"],["^ ","^1O",41,"^1P",201,"^G","devtools.format/IDevtoolsFormat"]],"^2S",[["^ ","^1O",79,"^1P",190,"^G","obj"],["^ ","^1O",49,"^1P",191,"^G","obj"],["^ ","^1O",5,"^1P",194,"^G","obj"],["^ ","^1O",73,"^1P",195,"^G","obj"],["^ ","^1O",73,"^1P",201,"^G","obj"]]],"~i102",["^ ","^1N",[["^ ","^1O",0,"^1P",209],["^ ","^1O",4,"^1P",209],["^ ","^1O",4,"^1P",209],["^ ","^1O",7,"^1P",209],["^ ","^1O",9,"^1P",209],["^ ","^1O",17,"^1P",209],["^ ","^1O",0,"^1P",210],["^ ","^1O",3,"^1P",210],["^ ","^1O",5,"^1P",210],["^ ","^1O",16,"^1P",210],["^ ","^1O",17,"^1P",210,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1O",49,"^1P",210],["^ ","^1O",0,"^1P",211],["^ ","^1O",0,"^1P",213],["^ ","^1O",3,"^1P",213],["^ ","^1O",5,"^1P",213],["^ ","^1O",0,"^1P",214],["^ ","^1O",7,"^1P",214,"^G","cljs.core/native-satisfies?"],["^ ","^1O",0,"^1P",216],["^ ","^1O",0,"^1P",220],["^ ","^1O",7,"^1P",220,"^G","cljs.core/native-satisfies?"],["^ ","^1O",16,"^1P",222],["^ ","^1O",20,"^1P",222,"^G","_e__13298__auto__"],["^ ","^1O",40,"^1P",222,"^G","e14786"],["^ ","^1O",0,"^1P",223],["^ ","^1O",0,"^1P",223]],"^3B",[["^ ","^1O",41,"^1P",214,"^G","devtools.protocols/IFormat"],["^ ","^1O",41,"^1P",220,"^G","devtools.protocols/IFormat"]],"^2J",[["^ ","^1O",10,"^1P",209,"^G","obj"],["^ ","^1O",49,"^1P",210,"^G","obj"],["^ ","^1O",5,"^1P",213,"^G","obj"],["^ ","^1O",68,"^1P",214,"^G","obj"],["^ ","^1O",68,"^1P",220,"^G","obj"]]],"~i103",["^ ","~i6",[["^ ","^1O",0,"^1P",226]],"~i7",[["^ ","^1O",7,"^1P",226,"^G","cljs.core/-write"]],"^21",[["^ ","^1O",24,"^1P",226,"^G","writer"]],"^23",[["^ ","^1O",31,"^1P",226],["^ ","^1O",120,"^1P",226]],"^1T",[["^ ","^1O",31,"^1P",226,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2?",[["^ ","^1O",110,"^1P",226,"^G","markup-db"]],"^2S",[["^ ","^1O",234,"^1P",226,"^G","obj"]]],"~i104",["^ ","~i6",[["^ ","^1O",0,"^1P",228],["^ ","^1O",4,"^1P",228,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",229],["^ ","^1O",0,"^1P",229],["^ ","^1O",20,"^1P",229,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",230],["^ ","^1O",20,"^1P",230,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",231]],"^1Q",[["^ ","^1O",4,"^1P",230,"^G","atomic-markup"]],"^25",[["^ ","^1O",25,"^1P",228],["^ ","^1O",114,"^1P",228]],"^1W",[["^ ","^1O",25,"^1P",228,"^G","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2E",[["^ ","^1O",104,"^1P",228,"^G","markup-db"]],"^2X",[["^ ","^1O",221,"^1P",228,"^G","obj"]]],"~i105",["^ ","~i8",[["^ ","^1O",0,"^1P",231]],"~i9",[["^ ","^1O",7,"^1P",231,"^G","cljs.core/-write"]],"^1U",[["^ ","^1O",24,"^1P",231,"^G","writer"]],"^26",[["^ ","^1O",31,"^1P",231,"^G","atomic-markup"]]],"~i106",["^ ","~i8",[["^ ","^1O",0,"^1P",233],["^ ","^1O",0,"^1P",235]],"^21",[["^ ","^1O",4,"^1P",233,"^G","default-impl"]],"^24",[["^ ","^1O",19,"^1P",233],["^ ","^1O",19,"^1P",233]],"^2E",[["^ ","^1O",121,"^1P",233,"^G","opts"]]],"~i108",["^ ","^21",[["^ ","^1O",4,"^1P",234,"^G","inner-opts"]],"^20",[["^ ","^1O",17,"^1P",234]],"^25",[["^ ","^1O",19,"^1P",234],["^ ","^1O",98,"^1P",234]],"^1W",[["^ ","^1O",19,"^1P",234,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^1O",64,"^1P",234,"^G","cljs.core/*print-level*"]],"^2>",[["^ ","^1O",104,"^1P",234],["^ ","^1O",155,"^1P",234],["^ ","^1O",224,"^1P",234]],"^2L",[["^ ","^1O",104,"^1P",234,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2S",[["^ ","^1O",150,"^1P",234,"^G","opts"]],"^2G",[["^ ","^1O",229,"^1P",234,"^G","opts"]]],"~i109",["^ ","^1Z",[["^ ","^1O",0,"^1P",235]],"^1[",[["^ ","^1O",8,"^1P",235,"^G","default-impl"],["^ ","^1O",53,"^1P",235,"^G","default-impl"],["^ ","^1O",121,"^1P",235,"^G","default-impl"]],"^29",[["^ ","^1O",96,"^1P",235,"^G","obj"],["^ ","^1O",144,"^1P",235,"^G","obj"]],"^2A",[["^ ","^1O",100,"^1P",235,"^G","writer"],["^ ","^1O",148,"^1P",235,"^G","writer"]],"^2?",[["^ ","^1O",107,"^1P",235,"^G","inner-opts"],["^ ","^1O",155,"^1P",235,"^G","inner-opts"]]],"~i111",["^ ","~i0",[["^ ","^1O",0,"^1P",239],["^ ","^1O",48,"^1P",239],["^ ","^1O",0,"^1P",240]],"~i6",[["^ ","^1O",0,"^1P",239,"^G","devtools.formatters.printing/alt-printer-impl"]],"^29",[["^ ","^1O",104,"^1P",239,"^G","obj"]],"^2A",[["^ ","^1O",108,"^1P",239,"^G","writer"]],"^2?",[["^ ","^1O",115,"^1P",239,"^G","opts"]]],"~i112",["^ ","~i2",[["^ ","^1O",0,"^1P",240],["^ ","^1O",4,"^1P",240,"^G","*current-state*14791"],["^ ","^1O",0,"^1P",241],["^ ","^1O",0,"^1P",241],["^ ","^1O",0,"^1P",243],["^ ","^1O",4,"^1P",243],["^ ","^1O",10,"^1P",253],["^ ","^1O",10,"^1P",253],["^ ","^1O",64,"^1P",253,"^G","*current-state*14791"]],"^1N",[["^ ","^1O",37,"^1P",240,"^G","devtools.formatters.state/*current-state*"],["^ ","^1O",0,"^1P",241,"^G","devtools.formatters.state/*current-state*"],["^ ","^1O",10,"^1P",253,"^G","devtools.formatters.state/*current-state*"]],"^2A",[["^ ","^1O",54,"^1P",241]],"^25",[["^ ","^1O",54,"^1P",241,"^G","devtools.formatters.state/get-current-state"]]],"~i113",["^ ","~i4",[["^ ","^1O",4,"^1P",243],["^ ","^1O",8,"^1P",243,"^G","map__14792"],["^ ","^1O",4,"^1P",244,"^G","map__14792"],["^ ","^1O",21,"^1P",244],["^ ","^1O",23,"^1P",244],["^ ","^1O",25,"^1P",244],["^ ","^1O",27,"^1P",244],["^ ","^1O",28,"^1P",244,"^G","map__14792"],["^ ","^1O",42,"^1P",244],["^ ","^1O",50,"^1P",244],["^ ","^1O",52,"^1P",244],["^ ","^1O",54,"^1P",244],["^ ","^1O",55,"^1P",244],["^ ","^1O",55,"^1P",244,"^G","map__14792"],["^ ","^1O",104,"^1P",244],["^ ","^1O",115,"^1P",244],["^ ","^1O",116,"^1P",244,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1O",148,"^1P",244],["^ ","^1O",148,"^1P",244,"^G","map__14792"],["^ ","^1O",179,"^1P",244],["^ ","^1O",184,"^1P",244],["^ ","^1O",191,"^1P",244],["^ ","^1O",199,"^1P",244],["^ ","^1O",199,"^1P",244,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1O",245,"^1P",244,"^G","cljs.core/hash-map"],["^ ","^1O",264,"^1P",244,"^G","map__14792"],["^ ","^1O",276,"^1P",244,"^G","map__14792"],["^ ","^1O",16,"^1P",245],["^ ","^1O",16,"^1P",245,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1O",60,"^1P",245,"^G","map__14792"],["^ ","^1O",75,"^1P",245],["^ ","^1O",0,"^1P",248]],"^1S",[["^ ","^1O",4,"^1P",245,"^G","markup-db"]],"^1W",[["^ ","^1O",21,"^1P",243,"^G","opts"]]],"~i114",["^ ","^1Z",[["^ ","^1O",4,"^1P",246,"^G","circular?"]],"^1V",[["^ ","^1O",22,"^1P",246]],"^23",[["^ ","^1O",22,"^1P",246,"^G","devtools.formatters.state/is-circular?"]],"^2K",[["^ ","^1O",67,"^1P",246,"^G","obj"]]],"~i115",["^ ","^1Z",[["^ ","^1O",4,"^1P",247,"^G","inner-writer"]],"^26",[["^ ","^1O",19,"^1P",247]],"^29",[["^ ","^1O",19,"^1P",247,"^G","devtools.formatters.printing/make-template-writer"]],"^2I",[["^ ","^1O",69,"^1P",247],["^ ","^1O",69,"^1P",247]],"^2U",[["^ ","^1O",161,"^1P",247,"^G","opts"]]],"~i116",["^ ","~i6",[["^ ","^1O",0,"^1P",248]],"~i7",[["^ ","^1O",0,"^1P",248,"^G","devtools.formatters.state/push-object-to-current-history!"]],"^1X",[["^ ","^1O",63,"^1P",248,"^G","obj"]]],"~i117",["^ ","~i6",[["^ ","^1O",0,"^1P",250]],"~i7",[["^ ","^1O",0,"^1P",250,"^G","devtools.formatters.printing/alt-printer-job"]],"^26",[["^ ","^1O",45,"^1P",250,"^G","obj"]],"^24",[["^ ","^1O",49,"^1P",250,"^G","inner-writer"]],"^3B",[["^ ","^1O",62,"^1P",250,"^G","opts"]]],"~i118",["^ ","~i6",[["^ ","^1O",0,"^1P",252]],"^21",[["^ ","^1O",7,"^1P",252,"^G","writer"]],"^23",[["^ ","^1O",20,"^1P",252]],"^1T",[["^ ","^1O",20,"^1P",252,"^G","devtools.formatters.printing/post-process-printed-output"]],"^2L",[["^ ","^1O",77,"^1P",252]],"^2P",[["^ ","^1O",77,"^1P",252,"^G","inner-writer"]],"~i76",[["^ ","^1O",102,"^1P",252,"^G","obj"]],"^32",[["^ ","^1O",106,"^1P",252,"^G","markup-db"]],"^3<",[["^ ","^1O",116,"^1P",252,"^G","circular?"]]],"~i122",["^ ","~i0",[["^ ","^1O",0,"^1P",255],["^ ","^1O",45,"^1P",255],["^ ","^1O",0,"^1P",256]],"~i6",[["^ ","^1O",0,"^1P",255,"^G","devtools.formatters.printing/managed-print"]],"^23",[["^ ","^1O",98,"^1P",255,"^G","tag"]],"^20",[["^ ","^1O",102,"^1P",255,"^G","markup-db"]],"^2?",[["^ ","^1O",112,"^1P",255,"^G","printer"]]],"~i123",["^ ","~i2",[["^ ","^1O",0,"^1P",256],["^ ","^1O",11,"^1P",257],["^ ","^1O",54,"^1P",257],["^ ","^1O",160,"^1P",257],["^ ","^1O",232,"^1P",257],["^ ","^1O",404,"^1P",257],["^ ","^1O",13,"^1P",258],["^ ","^1O",0,"^1P",260],["^ ","^1O",0,"^1P",263]],"~i8",[["^ ","^1O",4,"^1P",256,"^G","writer"]],"^1Q",[["^ ","^1O",13,"^1P",256]],"^1U",[["^ ","^1O",13,"^1P",256,"^G","devtools.formatters.printing/make-template-writer"]],"^30",[["^ ","^1O",63,"^1P",256,"^G","markup-db"]]],"~i124",["^ ","~i8",[["^ ","^1O",4,"^1P",257,"^G","opts"]],"^2A",[["^ ","^1O",114,"^1P",257,"^G","devtools.formatters.printing/alt-printer-impl"]]],"~i125",["^ ","^2A",[["^ ","^1O",222,"^1P",257,"^G","markup-db"]]],"~i126",["^ ","^2A",[["^ ","^1O",301,"^1P",257],["^ ","^1O",321,"^1P",257]],"^25",[["^ ","^1O",301,"^1P",257,"^G","devtools.prefs/pref"]]],"~i127",["^ ","^2A",[["^ ","^1O",470,"^1P",257],["^ ","^1O",490,"^1P",257]],"^25",[["^ ","^1O",470,"^1P",257,"^G","devtools.prefs/pref"]]],"~i128",["^ ","~i8",[["^ ","^1O",4,"^1P",258,"^G","job-fn"]],"^1U",[["^ ","^1O",0,"^1P",260]],"^2C",[["^ ","^1O",8,"^1P",260,"^G","printer"],["^ ","^1O",48,"^1P",260,"^G","printer"],["^ ","^1O",101,"^1P",260,"^G","printer"]],"^20",[["^ ","^1O",86,"^1P",260,"^G","writer"],["^ ","^1O",119,"^1P",260,"^G","writer"]],"^2@",[["^ ","^1O",93,"^1P",260,"^G","opts"],["^ ","^1O",126,"^1P",260,"^G","opts"]]],"~i129",["^ ","~i4",[["^ ","^1O",0,"^1P",263],["^ ","^1O",4,"^1P",263,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",264],["^ ","^1O",0,"^1P",264],["^ ","^1O",20,"^1P",264,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",265],["^ ","^1O",32,"^1P",265,"^G","temp__5455__auto__"],["^ ","^1O",0,"^1P",266]],"^1R",[["^ ","^1O",4,"^1P",265,"^G","managed-print-level"]],"^2B",[["^ ","^1O",31,"^1P",263]],"^2K",[["^ ","^1O",31,"^1P",263,"^G","devtools.formatters.state/get-managed-print-level"]]],"~i130",["^ ","~i6",[["^ ","^1O",0,"^1P",266],["^ ","^1O",4,"^1P",266,"^G","*print-level*14802"],["^ ","^1O",0,"^1P",267],["^ ","^1O",0,"^1P",267],["^ ","^1O",0,"^1P",269],["^ ","^1O",4,"^1P",269],["^ ","^1O",10,"^1P",276],["^ ","^1O",10,"^1P",276],["^ ","^1O",46,"^1P",276,"^G","*print-level*14802"]],"^1U",[["^ ","^1O",41,"^1P",266,"^G","cljs.core/*print-level*"],["^ ","^1O",0,"^1P",267,"^G","cljs.core/*print-level*"],["^ ","^1O",10,"^1P",276,"^G","cljs.core/*print-level*"]],"^1W",[["^ ","^1O",36,"^1P",267,"^G","managed-print-level"]]],"~i131",["^ ","~i8",[["^ ","^1O",4,"^1P",269],["^ ","^1O",57,"^1P",269],["^ ","^1O",18,"^1P",270,"^G","p1__14801#"],["^ ","^1O",0,"^1P",271]],"~i9",[["^ ","^1O",4,"^1P",269,"^G","devtools.formatters.state/update-current-state!"]],"^2@",[["^ ","^1O",0,"^1P",271],["^ ","^1O",57,"^1P",271,"^G","p1__14801#"],["^ ","^1O",74,"^1P",271]],"^2B",[["^ ","^1O",7,"^1P",271,"^G","devtools.formatters.state/set-managed-print-level"]]],"~i132",["^ ","~i8",[["^ ","^1O",0,"^1P",275]],"~i9",[["^ ","^1O",0,"^1P",275,"^G","job-fn"]]],"~i133",["^ ","~i6",[["^ ","^1O",0,"^1P",278]],"~i7",[["^ ","^1O",0,"^1P",278,"^G","job-fn"]]],"~i134",["^ ","~i4",[["^ ","^1O",0,"^1P",281],["^ ","^1O",54,"^1P",281]],"~i5",[["^ ","^1O",7,"^1P",281,"^G","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^1R",[["^ ","^1O",137,"^1P",281]],"^21",[["^ ","^1O",137,"^1P",281,"^G","devtools.prefs/pref"]],"^1Y",[["^ ","^1O",157,"^1P",281,"^G","tag"]],"^20",[["^ ","^1O",170,"^1P",281]],"^30",[["^ ","^1O",170,"^1P",281,"^G","writer"]]],"~i138",["^ ","~i0",[["^ ","^1O",0,"^1P",283],["^ ","^1O",56,"^1P",283],["^ ","^1O",0,"^1P",284]],"~i6",[["^ ","^1O",0,"^1P",283,"^G","devtools.formatters.printing/managed-print-via-writer"]],"^2@",[["^ ","^1O",120,"^1P",283,"^G","value"]],"^2;",[["^ ","^1O",126,"^1P",283,"^G","tag"]],"^2Y",[["^ ","^1O",130,"^1P",283,"^G","markup-db"]]],"~i139",["^ ","~i2",[["^ ","^1O",0,"^1P",284]],"~i3",[["^ ","^1O",7,"^1P",284,"^G","devtools.formatters.printing/managed-print"]],"^2C",[["^ ","^1O",50,"^1P",284,"^G","tag"]],"^23",[["^ ","^1O",54,"^1P",284,"^G","markup-db"]],"^2:",[["^ ","^1O",64,"^1P",284],["^ ","^1O",0,"^1P",285]],"^2D",[["^ ","^1O",75,"^1P",284,"^G","writer"]],"^2E",[["^ ","^1O",82,"^1P",284,"^G","opts"]]],"~i140",["^ ","^2B",[["^ ","^1O",0,"^1P",285],["^ ","^1O",31,"^1P",285]],"^2K",[["^ ","^1O",7,"^1P",285,"^G","cljs.core/pr-seq-writer"]],"^2>",[["^ ","^1O",114,"^1P",285,"^G","value"]],"^2S",[["^ ","^1O",128,"^1P",285,"^G","writer"]],"^2Z",[["^ ","^1O",135,"^1P",285,"^G","opts"]]],"~i142",["^ ","~i0",[["^ ","^1O",0,"^1P",288],["^ ","^1O",58,"^1P",288],["^ ","^1O",0,"^1P",289]],"~i6",[["^ ","^1O",0,"^1P",288,"^G","devtools.formatters.printing/managed-print-via-protocol"]],"^2K",[["^ ","^1O",124,"^1P",288,"^G","value"]],"^3B",[["^ ","^1O",130,"^1P",288,"^G","tag"]],"^2F",[["^ ","^1O",134,"^1P",288,"^G","markup-db"]]],"~i143",["^ ","~i2",[["^ ","^1O",0,"^1P",289]],"~i3",[["^ ","^1O",7,"^1P",289,"^G","devtools.formatters.printing/managed-print"]],"^2C",[["^ ","^1O",50,"^1P",289,"^G","tag"]],"^23",[["^ ","^1O",54,"^1P",289,"^G","markup-db"]],"^2:",[["^ ","^1O",64,"^1P",289],["^ ","^1O",0,"^1P",290]],"^2D",[["^ ","^1O",75,"^1P",289,"^G","writer"]],"^2E",[["^ ","^1O",82,"^1P",289,"^G","opts"]]],"~i144",["^ ","^2B",[["^ ","^1O",0,"^1P",290]],"^2K",[["^ ","^1O",7,"^1P",290,"^G","cljs.core/-pr-writer"]],"^2I",[["^ ","^1O",28,"^1P",290,"^G","value"]],"^28",[["^ ","^1O",34,"^1P",290,"^G","writer"]],"^22",[["^ ","^1O",41,"^1P",290,"^G","opts"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1538013749000],["^1F","devtools/formatters/printing.cljs"],[1538013749000,"^S","^R","^M","^N","^O","^P","^Q"],["^4@","^R"],[1533531173000],["^1F","devtools/formatters/helpers.cljs"],[1538013749000,"^S","^R","^M","~$devtools.munging","^N","^O"],["^1F","goog/math/math.js"],[1533039457000,"^S","~$goog.array","~$goog.asserts"],["^1F","goog/array/array.js"],[1533039457000,"^S","^4D"],["^1F","goog/debug/error.js"],[1533039457000,"^S"],["^1F","goog/dom/nodetype.js"],[1533039457000,"^S"],["^1F","goog/object/object.js"],[1533039457000,"^S"],"~:SHADOW-TIMESTAMP",[1538013766000,1533531173000],["^1F","goog/math/long.js"],[1533039457000,"^S","^4D","~$goog.reflect"],["^1F","goog/functions/functions.js"],[1533039457000,"^S"],["^1F","devtools/prefs.cljs"],[1538013749000,"^S","^R","^4A"],["^1F","goog/structs/map.js"],[1533039457000,"^S","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^4@","^D"],[1538013749000],["^1F","devtools/munging.cljs"],[1538013749000,"^S","^R","~$clojure.string","~$devtools.context","^4I","~$goog.string.StringBuffer"],["^1F","goog/asserts/asserts.js"],[1533039457000,"^S","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1F","goog/uri/uri.js"],[1533039457000,"^S","^4C","^4D","^4O","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1F","goog/base.js"],[1533039457000],["^1F","goog/structs/structs.js"],[1533039457000,"^S","^4C","^4I"],["^1F","clojure/string.cljs"],[1533531173000,"^S","^R","^4O","^4L"],["^1F","devtools/formatters/state.cljs"],[1538013749000,"^S","^R"],["^1F","goog/string/string.js"],[1533039457000,"^S"],["^4@","^4B"],[1538013749000],["^1F","goog/reflect/reflect.js"],[1533039457000,"^S"],["^1F","goog/string/stringbuffer.js"],[1533039457000,"^S"],["^1F","goog/iter/iter.js"],[1533039457000,"^S","^4C","^4D","~$goog.functions","~$goog.math"],["^1F","devtools/defaults.cljs"],[1538013749000,"^S","^R"],["^4@","^M"],[1538013749000],["^1F","cljs/core.cljs"],[1533531173000,"~$goog.math.Long","~$goog.math.Integer","^4O","^4I","^4C","~$goog.Uri","^4L"],["^1F","devtools/context.cljs"],[1538013749000,"^S","^R"],["^1F","goog/math/integer.js"],[1533039457000,"^S"],["^1F","devtools/format.cljs"],[1538013749000,"^S","^R","^4K"],["^1F","goog/uri/utils.js"],[1533039457000,"^S","^4C","^4D","^4O"],["^1F","devtools/protocols.cljs"],[1538013749000,"^S","^R"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"~:shadow/js-access-properties",["^F",["get-group","merge"]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S"],"^T",["^F",["^U","^V"]],"~:shadow/js-access-global",["^F",["Error"]],"^W",["^ ","^X","^O","^Y","^Q","^Z","^O","^[","^N","^10","^P","^11","^P","^12","^O","^13","^Q","^14","^P","^15","^Q","^16","^M","^17","^P","^18","^P","^19","^Q","^1:","^O","^1;","^P","^1<","^Q","^1=","^P"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^F",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1?",["~$quote",["^1?",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^F",["^55"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^54",["^F",["^55","^56"]],"^G","~$devtools.formatters.printing/->TemplateWriter","~:variadic",false,"^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1?",[["^5;","^5<"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"^57","^58","^7",31,"^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^59",["^1?",["^5:",["^1?",[["^5;","^5<"]]]]],"^5=",["^F",["^55"]],"^5>","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^59",["^1?",["^5:",["^1?",[["~$obj","~$writer","~$opts"]]]]]],"^G","~$devtools.formatters.printing/alt-printer-impl","^5@",false,"^6","devtools/formatters/printing.cljs","^:",23,"^5A",["^1?",[["^5G","^5H","^5I"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",112,"^9",112,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5G","^5H","^5I"]]]]]],"~$markup?",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^59",["^1?",["^5:",["^1?",[["~$value"]]]]]],"^G","~$devtools.formatters.printing/markup?","^5@",false,"^6","devtools/formatters/printing.cljs","^:",14,"^5A",["^1?",[["^5L"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",13,"^9",13,"^5D",1,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5L"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^59",["^1?",["^5:",["^1?",[["^5;","^5L","^5<"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","^5@",false,"^6","devtools/formatters/printing.cljs","^:",35,"^5A",["^1?",[["^5;","^5L","^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",62,"^9",62,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5;","^5L","^5<"]]]]]],"~$mark-as-markup",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^59",["^1?",["^5:",["^1?",[["^5L"]]]]]],"^G","~$devtools.formatters.printing/mark-as-markup","^5@",false,"^6","devtools/formatters/printing.cljs","^:",21,"^5A",["^1?",[["^5L"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",16,"^9",16,"^5D",1,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5L"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^59",["^1?",["^5:",["^1?",[["^5;","^5G","^5<"]]]]]],"^G","~$devtools.formatters.printing/detect-edge-case-and-patch-it","^5@",false,"^6","devtools/formatters/printing.cljs","^:",36,"^5A",["^1?",[["^5;","^5G","^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",78,"^9",78,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5;","^5G","^5<"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^59",["^1?",["^5:",["^1?",[["^5;","^5G","^5<"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","^5@",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5A",["^1?",[["^5;","^5G","^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",48,"^9",48,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5;","^5G","^5<"]]]]]],"~$managed-print-via-writer",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^59",["^1?",["^5:",["^1?",[["^5L","~$tag","^5<"]]]]]],"^G","~$devtools.formatters.printing/managed-print-via-writer","^5@",false,"^6","devtools/formatters/printing.cljs","^:",31,"^5A",["^1?",[["^5L","^5W","^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",139,"^9",139,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5L","^5W","^5<"]]]]]],"~$already-reference?",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^59",["^1?",["^5:",["^1?",[["^5;"]]]]]],"^G","~$devtools.formatters.printing/already-reference?","^5@",false,"^6","devtools/formatters/printing.cljs","^:",25,"^5A",["^1?",[["^5;"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",44,"^9",44,"^5D",1,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5;"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^54",["^F",["^55","^56"]],"^G","~$devtools.formatters.printing/TemplateWriter","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^5=",["^F",["^55"]]],"~$wrap-value-as-reference-if-needed",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^59",["^1?",["^5:",["^1?",[["^5<","^5L"]]]]]],"^G","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","^5@",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5A",["^1?",[["^5<","^5L"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",24,"^9",24,"^5D",2,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5<","^5L"]]]]]],"~$managed-print-via-protocol",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^59",["^1?",["^5:",["^1?",[["^5L","^5W","^5<"]]]]]],"^G","~$devtools.formatters.printing/managed-print-via-protocol","^5@",false,"^6","devtools/formatters/printing.cljs","^:",33,"^5A",["^1?",[["^5L","^5W","^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",143,"^9",143,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5L","^5W","^5<"]]]]]],"~$alt-printer-job",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^59",["^1?",["^5:",["^1?",[["^5G","^5H","^5I"]]]]]],"^G","~$devtools.formatters.printing/alt-printer-job","^5@",false,"^6","devtools/formatters/printing.cljs","^:",22,"^5A",["^1?",[["^5G","^5H","^5I"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",100,"^9",100,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5G","^5H","^5I"]]]]]],"~$make-template-writer",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^59",["^1?",["^5:",["^1?",[["^5<"]]]]]],"^G","~$devtools.formatters.printing/make-template-writer","^5@",false,"^6","devtools/formatters/printing.cljs","^:",27,"^5A",["^1?",[["^5<"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",39,"^9",39,"^5D",1,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5<"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^59",["^1?",["^5:",["^1?",[["^5;","^5<","~$circular?"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","^5@",false,"^6","devtools/formatters/printing.cljs","^:",47,"^5A",["^1?",[["^5;","^5<","^6?"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",57,"^9",57,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5;","^5<","^6?"]]]]]],"~$managed-print",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^59",["^1?",["^5:",["^1?",[["^5W","^5<","~$printer"]]]]]],"^G","~$devtools.formatters.printing/managed-print","^5@",false,"^6","devtools/formatters/printing.cljs","^:",20,"^5A",["^1?",[["^5W","^5<","^6B"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",123,"^9",123,"^5D",3,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^5W","^5<","^6B"]]]]]],"~$build-markup",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^59",["^1?",["^5:",["^1?",[["^5<","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5@",true,"^5D",2,"^5A",[["^1?",["^5<","^6E","^6F"]]],"^59",["^1?",[["^5<","^6E","~$&","^6F"]]],"^5C",["^1?",[null]]]],"^G","~$devtools.formatters.printing/build-markup","^5@",true,"^6","devtools/formatters/printing.cljs","^:",19,"^6G",["^ ","^5@",true,"^5D",2,"^5A",[["^1?",["^5<","^6E","^6F"]]],"^59",["^1?",[["^5<","^6E","~$&","^6F"]]],"^5C",["^1?",[null]]],"^5A",[["^1?",["^5<","^6E","^6F"]]],"^5B",null,"^5C",["^1?",[null]],"^8",1,"^7",19,"^9",19,"^5D",2,"^5E",true,"^59",["^1?",[["^5<","^6E","~$&","^6F"]]]],"~$post-process-printed-output",["^ ","^53",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^59",["^1?",["^5:",["^1?",[["~$output-group","^5G","^5<","^6?"]]]]]],"^G","~$devtools.formatters.printing/post-process-printed-output","^5@",false,"^6","devtools/formatters/printing.cljs","^:",34,"^5A",["^1?",[["^6J","^5G","^5<","^6?"]]],"^5B",null,"^5C",["^1?",[null,null]],"^8",1,"^7",91,"^9",91,"^5D",4,"^5E",true,"^59",["^1?",["^5:",["^1?",[["^6J","^5G","^5<","^6?"]]]]]]],"^V",["^ ","^D","^D","^R","^R","^M","^M"],"~:cljs.analyzer/constants",["^ ","^T",["^F",["~:render-metas","~:else","~:max-header-elements","^5;","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^5<","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^73","^6U","^5;","^70","^5<","^6Z","^6R","^6[","^6W","^6Y","^6M","^6Q","^6S","^6N","^6T","^72","^6P","^6X","^71","^6V","^6O"]],"^1B",["^ ","^V",["^F",[]],"^U",["^F",[]]],"^1C",["^ "],"^1D",["^S","^R","^M","^N","^O","^P","^Q"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4?",[["^77","~:static-fns"],true,["^77","~:elide-asserts"],false,["^77","~:optimize-constants"],null,["^77","~:external-config"],null,["^77","~:tooling-config"],null,["^77","~:emit-constants"],null,["^77","~:infer-externs"],true,["^77","^1K"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^77","~:fn-invoke-direct"],null,["^77","^1M"],"/dev/null"]]]